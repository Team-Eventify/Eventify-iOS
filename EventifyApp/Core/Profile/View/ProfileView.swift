//
//  Profile.swift
//  EventifyApp
//
//  Created by –ó–∞—Ö–∞—Ä –õ–∏—Ç–≤–∏–Ω—á—É–∫ on 03.07.2024.
//

import SwiftUI

/// –í—å—é —ç–∫—Ä–∞–Ω–∞ "–ü—Ä–æ—Ñ–∏–ª—å"
struct ProfileView: View {
	// MARK: - Private Properties

	@StateObject private var viewModel = ProfileViewModel()
	@StateObject private var colorScheme = AppColorScheme.shared
	@State var showingDeleteAlert: Bool = false
	@State var showingExitAlert: Bool = false
	@State var navigateToSignUp: Bool = false

	// MARK: - Initialization

	/// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä
	/// - Parameter viewModel: –º–æ–¥–µ–ª—å —ç–∫—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è
	init(viewModel: ProfileViewModel? = nil) {
		_viewModel = StateObject(
			wrappedValue: viewModel ?? ProfileViewModel()
		)
	}

	// MARK: - Body

	var body: some View {
		NavigationStack {
			VStack {
				header
				Picker("", selection: $colorScheme.selectedTheme) {
					Text("–¢—ë–º–Ω–∞—è —Ç–µ–º–∞").tag(Theme.dark)
					Text("–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞").tag(Theme.light)
				}
				.pickerStyle(.segmented)
				.padding(.top, 18)
				.padding(.horizontal, 16)
				List {
					Section {
						NavigationLink {
							AddEventView()
						} label: {
							Text("–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ")
						}
					}

					Section {
						NavigationLink {
							TestView()
						} label: {
							Text("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
						}

						NavigationLink {} label: {
							Text("–ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
						}
					}

					Section {
						NavigationLink {
							TestView()
						} label: {
							Text("–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
						}
						NavigationLink {
							TestView()
						} label: {
							Text("–û—Ü–µ–Ω–∏—Ç—å")
						}
					}

					Section {
						Button {
							showingExitAlert.toggle()
						} label: {
							Text("–í—ã–π—Ç–∏")
								.foregroundStyle(.mainText)
						}
						.alert("–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?", isPresented: $showingExitAlert) {
							Button(role: .cancel) {
								Constants.isLogin = false
								print("üö™ Exit from account")
							} label: {
								Text("–î–∞")
									.foregroundStyle(.error)
							}

							Button {
								print("Continue work in app")
							} label: {
								Text("–ù–µ—Ç")
									.foregroundStyle(.mainText)
							}
						}
						Button {
							showingDeleteAlert.toggle()
						} label: {
							Text("–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç")
								.foregroundStyle(.error)
						}
						.alert("–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç?", isPresented: $showingDeleteAlert) {

							Button(role: .cancel) {
								Constants.isLogin = false
								print("ü™ì delete account")
							} label: {
								Text("–î–∞")
									.foregroundStyle(.error)
							}

							Button {
								print("‚úèÔ∏è resume account")
							} label: {
								Text("–ù–µ—Ç")
									.foregroundStyle(.mainText)
							}
						}
					}
				}
				.scrollDisabled(true)
				.scrollContentBackground(.hidden)
				.listStyle(.insetGrouped)
			}
			.navigationTitle("–ü—Ä–æ—Ñ–∏–ª—å")
			.navigationBarTitleDisplayMode(.large)
			.frame(maxWidth: .infinity, maxHeight: .infinity)
			.background(.bg, ignoresSafeAreaEdges: .all)
		}
	}
}

// MARK: - UI Components

/// –•–µ–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∞
private var header: some View {
	NavigationLink {
		ProfileDetail()
	} label: {
		HStack {
			VStack(alignment: .leading) {
				Text("–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω")
					.font(.mediumCompact(size: 24))
					.foregroundStyle(.black)
				Text("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
					.font(.regularCompact(size: 17))
					.foregroundStyle(.black)
			}
			Spacer()
			Image(systemName: "chevron.right")
				.foregroundColor(.black)
				.padding(.trailing, 16)
		}
		.padding(.all)
		.background(.brandYellow)
		.cornerRadius(10)
		.padding(.horizontal)
	}
}

#Preview {
	ProfileView()
}
